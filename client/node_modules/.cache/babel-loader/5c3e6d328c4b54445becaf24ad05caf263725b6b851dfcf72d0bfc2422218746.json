{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\nfunction* login(action) {\n  try {\n    const resultLogin = yield call(api.login, action.payload);\n    localStorage.setItem(\"user\", JSON.stringify(resultLogin.data));\n    localStorage.setItem(\"token\", JSON.stringify(resultLogin.data.token));\n    yield put(actions.authAction.actionLoginSuccess(resultLogin.data));\n  } catch (err) {\n    yield put(actions.authAction.actionLoginFailure({\n      message: err.response.data.message\n    }));\n  }\n}\nfunction* registerSaga(action) {\n  try {\n    const resultRegister = yield call(api.register, action.payload);\n    yield put(actions.registerAction.actionRegisterSuccess(resultRegister.status));\n  } catch (err) {\n    yield put(actions.registerAction.actionRegisterFailure({\n      message: err.response.status\n    }));\n  }\n}\nfunction* authSaga() {\n  yield takeLatest(actions.authAction.actionLogin, login);\n  yield takeLatest(actions.registerAction.actionRegister, registerSaga);\n}\nexport default authSaga;","map":{"version":3,"names":["takeLatest","call","put","actions","api","login","action","resultLogin","payload","localStorage","setItem","JSON","stringify","data","token","authAction","actionLoginSuccess","err","actionLoginFailure","message","response","registerSaga","resultRegister","register","registerAction","actionRegisterSuccess","status","actionRegisterFailure","authSaga","actionLogin","actionRegister"],"sources":["C:/WEB/WEB_APPLICATION_MASTER/client/src/redux/sagas/auth.saga.js"],"sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\n\nfunction* login(action) {\n    try {\n        const resultLogin = yield call(api.login, action.payload);\n        localStorage.setItem(\"user\", JSON.stringify(resultLogin.data));\n        localStorage.setItem(\"token\", JSON.stringify(resultLogin.data.token));\n        yield put(actions.authAction.actionLoginSuccess(resultLogin.data));\n    } catch (err) {\n        yield put(\n            actions.authAction.actionLoginFailure({\n                message: err.response.data.message,\n            })\n        );\n    }\n}\n\nfunction* registerSaga(action) {\n    try {\n        const resultRegister = yield call(api.register, action.payload);\n        yield put(actions.registerAction.actionRegisterSuccess(resultRegister.status));\n    } catch (err) {\n        yield put(\n            actions.registerAction.actionRegisterFailure({\n                message: err.response.status\n            })\n        );\n    }\n}\n\nfunction* authSaga() {\n    yield takeLatest(actions.authAction.actionLogin, login);\n    yield takeLatest(actions.registerAction.actionRegister, registerSaga);\n}\n\nexport default authSaga;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC1D,OAAO,KAAKC,OAAO,MAAM,YAAY;AACrC,OAAO,KAAKC,GAAG,MAAM,WAAW;AAEhC,UAAUC,KAAKA,CAACC,MAAM,EAAE;EACpB,IAAI;IACA,MAAMC,WAAW,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACC,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACzDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAACM,IAAI,CAAC,CAAC;IAC9DJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAACM,IAAI,CAACC,KAAK,CAAC,CAAC;IACrE,MAAMZ,GAAG,CAACC,OAAO,CAACY,UAAU,CAACC,kBAAkB,CAACT,WAAW,CAACM,IAAI,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOI,GAAG,EAAE;IACV,MAAMf,GAAG,CACLC,OAAO,CAACY,UAAU,CAACG,kBAAkB,CAAC;MAClCC,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACP,IAAI,CAACM;IAC/B,CAAC,CACL,CAAC;EACL;AACJ;AAEA,UAAUE,YAAYA,CAACf,MAAM,EAAE;EAC3B,IAAI;IACA,MAAMgB,cAAc,GAAG,MAAMrB,IAAI,CAACG,GAAG,CAACmB,QAAQ,EAAEjB,MAAM,CAACE,OAAO,CAAC;IAC/D,MAAMN,GAAG,CAACC,OAAO,CAACqB,cAAc,CAACC,qBAAqB,CAACH,cAAc,CAACI,MAAM,CAAC,CAAC;EAClF,CAAC,CAAC,OAAOT,GAAG,EAAE;IACV,MAAMf,GAAG,CACLC,OAAO,CAACqB,cAAc,CAACG,qBAAqB,CAAC;MACzCR,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACM;IAC1B,CAAC,CACL,CAAC;EACL;AACJ;AAEA,UAAUE,QAAQA,CAAA,EAAG;EACjB,MAAM5B,UAAU,CAACG,OAAO,CAACY,UAAU,CAACc,WAAW,EAAExB,KAAK,CAAC;EACvD,MAAML,UAAU,CAACG,OAAO,CAACqB,cAAc,CAACM,cAAc,EAAET,YAAY,CAAC;AACzE;AAEA,eAAeO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}