{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEB\\\\WEB_APPLICATION_MASTER\\\\client\\\\src\\\\components\\\\post\\\\list\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../redux/actions\";\nimport { mapLikePost$, postsState$ } from \"../../../redux/selectors\";\nimport { format } from \"date-fns\";\nimport Icon from \"../../icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LikePost({\n  postId\n}) {\n  _s();\n  const posts = useSelector(postsState$);\n  const mapLikePostSelector = useSelector(mapLikePost$);\n  const dispatch = useDispatch();\n  const likeList = new Map();\n  useEffect(() => {\n    if (posts !== undefined) {\n      posts.forEach(v => {\n        likeList.set(v.id, v.isLike);\n      });\n      dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n    }\n  }, []);\n  const savePostLike = useCallback(() => {\n    posts.forEach(v => {\n      likeList.set(v.id, v.isLike);\n    });\n    likeList.set(postId, true);\n    dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n    dispatch(actions.saveLikePostAction.actionSaveLikePost({\n      postId: postId\n    }));\n  });\n  const deletePostLike = useCallback(() => {\n    posts.forEach(v => {\n      likeList.set(v.id, v.isLike);\n    });\n    likeList.set(postId, false);\n    dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n    dispatch(actions.deleteLikePostAction.actionDeleteLikePost({\n      postId: postId\n    }));\n  });\n  if (mapLikePostSelector !== undefined) {\n    const likePostItem = mapLikePostSelector.get(postId);\n    if (likePostItem) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1\",\n        role: \"button\",\n        onClick: deletePostLike,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          iconName: \"favorite\",\n          color: likePostItem ? \"red\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1\",\n        role: \"button\",\n        onClick: savePostLike,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          iconName: \"favorite\",\n          color: likePostItem ? \"red\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n_s(LikePost, \"S9AXucyXwvYYpWMX6p71uKMPEi4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = LikePost;\nexport default function PostList() {\n  _s2();\n  const dispatch = useDispatch();\n  const posts = useSelector(postsState$);\n  React.useEffect(() => {\n    dispatch(actions.getPosts.getPostsRequest());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#eee\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex align-items-center h-100\",\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col col-lg-6 col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"bg-white p-3 rounded\",\n              style: {\n                borderLeft: \".25rem solid #a34e78;\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n                className: \"blockquote pb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(LikePost, {\n                    postId: post.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.totalLike\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n                  className: \"font-italic\",\n                  children: post.createBy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                  className: \"blockquote pb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: format(post.modifiedAt, \"yyyy-MM-dd\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s2(PostList, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"LikePost\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","useCallback","useEffect","useDispatch","useSelector","actions","mapLikePost$","postsState$","format","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","LikePost","postId","_s","posts","mapLikePostSelector","dispatch","likeList","Map","undefined","forEach","v","set","id","isLike","mapLikePostAction","actionMapLikePost","savePostLike","saveLikePostAction","actionSaveLikePost","deletePostLike","deleteLikePostAction","actionDeleteLikePost","likePostItem","get","className","role","onClick","children","iconName","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","PostList","_s2","getPosts","getPostsRequest","style","backgroundColor","map","post","borderLeft","content","totalLike","createBy","modifiedAt","_c2","$RefreshReg$"],"sources":["C:/WEB/WEB_APPLICATION_MASTER/client/src/components/post/list/index.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../redux/actions\";\n\nimport { mapLikePost$, postsState$ } from \"../../../redux/selectors\";\nimport { format } from \"date-fns\";\nimport Icon from \"../../icon\";\n\nfunction LikePost({ postId }) {\n    const posts = useSelector(postsState$);\n    const mapLikePostSelector = useSelector(mapLikePost$);\n    const dispatch = useDispatch();\n\n    const likeList = new Map();\n    useEffect(() => {\n        if (posts !== undefined) {\n            posts.forEach((v) => {\n                likeList.set(v.id, v.isLike);\n            });\n            dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n        }\n    }, []);\n\n    const savePostLike = useCallback(() => {\n        posts.forEach((v) => {\n            likeList.set(v.id, v.isLike);\n        });\n\n        likeList.set(postId, true);\n        dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n        dispatch(\n            actions.saveLikePostAction.actionSaveLikePost({ postId: postId })\n        );\n    });\n\n    const deletePostLike = useCallback(() => {\n        posts.forEach((v) => {\n            likeList.set(v.id, v.isLike);\n        });\n        likeList.set(postId, false);\n        dispatch(actions.mapLikePostAction.actionMapLikePost(likeList));\n        dispatch(\n            actions.deleteLikePostAction.actionDeleteLikePost({\n                postId: postId,\n            })\n        );\n    });\n\n    if (mapLikePostSelector !== undefined) {\n        const likePostItem = mapLikePostSelector.get(postId);\n        if (likePostItem) {\n            return (\n                <div className=\"mt-1\" role=\"button\" onClick={deletePostLike}>\n                    <Icon\n                        iconName=\"favorite\"\n                        color={likePostItem ? \"red\" : \"\"}\n                    />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"mt-1\" role=\"button\" onClick={savePostLike}>\n                    <Icon\n                        iconName=\"favorite\"\n                        color={likePostItem ? \"red\" : \"\"}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\nexport default function PostList() {\n    const dispatch = useDispatch();\n    const posts = useSelector(postsState$);\n\n    React.useEffect(() => {\n        dispatch(actions.getPosts.getPostsRequest());\n    }, [dispatch]);\n\n    return (\n        <>\n            <div style={{ backgroundColor: \"#eee\" }}>\n                <div className=\"container py-5\">\n                    <div className=\"row d-flex align-items-center h-100\">\n                        {posts.map((post) => (\n                            <div className=\"col col-lg-6 col-md-6\">\n                                <figure\n                                    className=\"bg-white p-3 rounded\"\n                                    style={{\n                                        borderLeft: \".25rem solid #a34e78;\",\n                                    }}\n                                >\n                                    <blockquote className=\"blockquote pb-2\">\n                                        <p>{post.content}</p>\n\n                                        <div className=\"d-flex\">\n                                            <LikePost postId={post.id} />\n                                            <div>\n                                                <p>{post.totalLike}</p>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <blockquote className=\"font-italic\">\n                                            {post.createBy}\n                                        </blockquote>\n                                        <blockquote className=\"blockquote pb-2\">\n                                            <p>\n                                                {format(\n                                                    post.modifiedAt,\n                                                    \"yyyy-MM-dd\"\n                                                )}\n                                            </p>\n                                        </blockquote>\n                                    </div>\n                                </figure>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}