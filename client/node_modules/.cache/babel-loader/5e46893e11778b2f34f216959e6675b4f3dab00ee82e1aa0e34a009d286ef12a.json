{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\nfunction* getAllUserSaga(action) {\n  try {\n    const getAllUser = yield call(api.getAllUsers);\n    yield put(actions.getAllUser.actionGetAllUserSuccess(getAllUser.data));\n  } catch (err) {\n    yield put(actions.getAllUser.actionGetAllUserFailure(err));\n  }\n}\nfunction* updateStatusUserSaga(action) {\n  try {\n    const updateStatusUser = yield call(api.updateStatusUser, action.payload);\n    yield put(actions.updateStatusUser.actionUpdateStatusUserSuccess(updateStatusUser.status));\n  } catch (err) {\n    yield put(actions.updateStatusUser.actionUpdateStatusUserFailure(err.response.status));\n  }\n}\nfunction* userSaga() {\n  yield takeLatest(actions.getAllUser.actionGetAllUser, getAllUserSaga);\n  yield takeLatest(actions.updateStatusUser.actionUpdateStatusUser, updateStatusUserSaga);\n}\nexport default userSaga;","map":{"version":3,"names":["takeLatest","call","put","actions","api","getAllUserSaga","action","getAllUser","getAllUsers","actionGetAllUserSuccess","data","err","actionGetAllUserFailure","updateStatusUserSaga","updateStatusUser","payload","actionUpdateStatusUserSuccess","status","actionUpdateStatusUserFailure","response","userSaga","actionGetAllUser","actionUpdateStatusUser"],"sources":["C:/WEB/WEB_APPLICATION_MASTER/client/src/redux/sagas/user.saga.js"],"sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\n\nfunction* getAllUserSaga(action) {\n    try {\n        const getAllUser = yield call(api.getAllUsers);\n        yield put(actions.getAllUser.actionGetAllUserSuccess(getAllUser.data));\n    } catch (err) {\n        yield put(actions.getAllUser.actionGetAllUserFailure(err));\n    }\n}\n\nfunction* updateStatusUserSaga(action) {\n    try {\n        const updateStatusUser = yield call(\n            api.updateStatusUser,\n            action.payload\n        );\n        yield put(\n            actions.updateStatusUser.actionUpdateStatusUserSuccess(\n                updateStatusUser.status\n            )\n        );\n    } catch (err) {\n        yield put(\n            actions.updateStatusUser.actionUpdateStatusUserFailure(\n                err.response.status\n            )\n        );\n    }\n}\n\nfunction* userSaga() {\n    yield takeLatest(actions.getAllUser.actionGetAllUser, getAllUserSaga);\n    yield takeLatest(\n        actions.updateStatusUser.actionUpdateStatusUser,\n        updateStatusUserSaga\n    );\n}\n\nexport default userSaga;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC1D,OAAO,KAAKC,OAAO,MAAM,YAAY;AACrC,OAAO,KAAKC,GAAG,MAAM,WAAW;AAEhC,UAAUC,cAAcA,CAACC,MAAM,EAAE;EAC7B,IAAI;IACA,MAAMC,UAAU,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACI,WAAW,CAAC;IAC9C,MAAMN,GAAG,CAACC,OAAO,CAACI,UAAU,CAACE,uBAAuB,CAACF,UAAU,CAACG,IAAI,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,MAAMT,GAAG,CAACC,OAAO,CAACI,UAAU,CAACK,uBAAuB,CAACD,GAAG,CAAC,CAAC;EAC9D;AACJ;AAEA,UAAUE,oBAAoBA,CAACP,MAAM,EAAE;EACnC,IAAI;IACA,MAAMQ,gBAAgB,GAAG,MAAMb,IAAI,CAC/BG,GAAG,CAACU,gBAAgB,EACpBR,MAAM,CAACS,OACX,CAAC;IACD,MAAMb,GAAG,CACLC,OAAO,CAACW,gBAAgB,CAACE,6BAA6B,CAClDF,gBAAgB,CAACG,MACrB,CACJ,CAAC;EACL,CAAC,CAAC,OAAON,GAAG,EAAE;IACV,MAAMT,GAAG,CACLC,OAAO,CAACW,gBAAgB,CAACI,6BAA6B,CAClDP,GAAG,CAACQ,QAAQ,CAACF,MACjB,CACJ,CAAC;EACL;AACJ;AAEA,UAAUG,QAAQA,CAAA,EAAG;EACjB,MAAMpB,UAAU,CAACG,OAAO,CAACI,UAAU,CAACc,gBAAgB,EAAEhB,cAAc,CAAC;EACrE,MAAML,UAAU,CACZG,OAAO,CAACW,gBAAgB,CAACQ,sBAAsB,EAC/CT,oBACJ,CAAC;AACL;AAEA,eAAeO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}