{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\nfunction* fetchPostsSaga(action) {\n  try {\n    const posts = yield call(api.fetchPosts);\n    yield put(actions.getPosts.getPostsSuccess(posts.data));\n  } catch (err) {\n    yield put(actions.getPosts.getPostsFailure(err));\n  }\n}\nfunction* createPostSaga(action) {\n  try {\n    const post = yield call(api.createPost, action.payload);\n    yield put(actions.createPost.createPostSuccess(post.data));\n  } catch (err) {\n    yield put(actions.createPost.createPostFailure(err));\n  }\n}\nfunction* updatePostSaga(action) {\n  try {\n    const updatedPost = yield call(api.updatePost, action.payload);\n    yield put(actions.updatePost.actionUpdatePostSuccess(updatedPost.status));\n  } catch (err) {\n    yield put(actions.updatePost.actionUpdatePostFailure(err.response.status));\n  }\n}\nfunction* deletePostSaga(action) {\n  try {\n    const deletePost = yield call(api.deletePost, action.payload);\n    yield put(actions.deletePost.actionDeletePostSuccess(deletePost.status));\n  } catch (err) {\n    console.log(err);\n    yield put(actions.deletePost.actionDeletePostPostFailure(err.response.status));\n  }\n}\nfunction* getDetailPostSaga(action) {\n  try {\n    const detailPost = yield call(api.getDetailPost, action.payload);\n    yield put(actions.detailPost.actionGetDetailPostSuccess(detailPost.data));\n  } catch (err) {\n    yield put(actions.detailPost.actionGetDetailPostFailure(err));\n  }\n}\nfunction* postSaga() {\n  yield takeLatest(actions.getPosts.getPostsRequest, fetchPostsSaga);\n  yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\n  yield takeLatest(actions.updatePost.actionUpdatePost, updatePostSaga);\n  yield takeLatest(actions.deletePost.actionDeletePost, deletePostSaga);\n  yield takeLatest(actions.detailPost.actionGetDetailPost, getDetailPostSaga);\n}\nexport default postSaga;","map":{"version":3,"names":["takeLatest","call","put","actions","api","fetchPostsSaga","action","posts","fetchPosts","getPosts","getPostsSuccess","data","err","getPostsFailure","createPostSaga","post","createPost","payload","createPostSuccess","createPostFailure","updatePostSaga","updatedPost","updatePost","actionUpdatePostSuccess","status","actionUpdatePostFailure","response","deletePostSaga","deletePost","actionDeletePostSuccess","console","log","actionDeletePostPostFailure","getDetailPostSaga","detailPost","getDetailPost","actionGetDetailPostSuccess","actionGetDetailPostFailure","postSaga","getPostsRequest","createPostRequest","actionUpdatePost","actionDeletePost","actionGetDetailPost"],"sources":["C:/WEB/WEB_APPLICATION_MASTER/client/src/redux/sagas/post.saga.js"],"sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\n\nfunction* fetchPostsSaga(action) {\n    try {\n        const posts = yield call(api.fetchPosts);\n        yield put(actions.getPosts.getPostsSuccess(posts.data));\n    } catch (err) {\n        yield put(actions.getPosts.getPostsFailure(err));\n    }\n}\n\nfunction* createPostSaga(action) {\n    try {\n        const post = yield call(api.createPost, action.payload);\n        yield put(actions.createPost.createPostSuccess(post.data));\n    } catch (err) {\n        yield put(actions.createPost.createPostFailure(err));\n    }\n}\n\nfunction* updatePostSaga(action) {\n    try {\n        const updatedPost = yield call(api.updatePost, action.payload);\n        yield put(actions.updatePost.actionUpdatePostSuccess(updatedPost.status));\n    } catch (err) {\n        yield put(actions.updatePost.actionUpdatePostFailure(err.response.status));\n    }\n}\n\nfunction* deletePostSaga(action) {\n    try {\n        const deletePost = yield call(api.deletePost, action.payload);\n        yield put(actions.deletePost.actionDeletePostSuccess(deletePost.status));\n    } catch (err) {\n        console.log(err)\n        yield put(actions.deletePost.actionDeletePostPostFailure(err.response.status));\n    }\n}\n\nfunction* getDetailPostSaga(action) {\n    try {\n        const detailPost = yield call(api.getDetailPost, action.payload);\n        yield put(actions.detailPost.actionGetDetailPostSuccess(detailPost.data));\n    } catch (err) {\n        yield put(actions.detailPost.actionGetDetailPostFailure(err));\n    }\n}\n\nfunction* postSaga() {\n    yield takeLatest(actions.getPosts.getPostsRequest, fetchPostsSaga);\n    yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\n    yield takeLatest(actions.updatePost.actionUpdatePost, updatePostSaga);\n    yield takeLatest(actions.deletePost.actionDeletePost, deletePostSaga);\n    yield takeLatest(actions.detailPost.actionGetDetailPost, getDetailPostSaga);\n}\n\nexport default postSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}